{"version":3,"sources":["../src/scrollspy.js"],"names":["ScrollSpy","$","NAME","VERSION","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","fn","Default","offset","method","target","DefaultType","Event","ACTIVATE","SCROLL","LOAD_DATA_API","ClassName","DROPDOWN_ITEM","DROPDOWN_MENU","NAV_LINK","NAV","ACTIVE","Selector","DATA_SPY","LIST_ITEM","LI","LI_DROPDOWN","NAV_LINKS","DROPDOWN","DROPDOWN_ITEMS","DROPDOWN_TOGGLE","OffsetMethod","OFFSET","POSITION","element","config","_element","_scrollElement","tagName","window","_config","_getConfig","_selector","_offsets","_targets","_activeTarget","_scrollHeight","on","proxy","_process","refresh","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","targets","makeArray","map","targetSelector","getSelectorFromElement","offsetWidth","offsetHeight","top","filter","item","sort","a","b","forEach","push","removeData","off","extend","id","attr","getUID","typeCheckConfig","scrollY","scrollTop","scrollHeight","Math","max","document","body","documentElement","maxScroll","length","_activate","_clear","i","isActiveTarget","undefined","queries","split","selector","$link","join","hasClass","closest","find","addClass","parents","trigger","relatedTarget","removeClass","each","data","Error","scrollSpys","$spy","_jQueryInterface","call","Constructor","noConflict","jQuery"],"mappings":"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","file":"scrollspy.js","sourcesContent":["import Util from './util'\n\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.2): scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst ScrollSpy = (($) => {\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  const NAME               = 'scrollspy'\n  const VERSION            = '4.0.0-alpha'\n  const DATA_KEY           = 'bs.scrollspy'\n  const EVENT_KEY          = `.${DATA_KEY}`\n  const DATA_API_KEY       = '.data-api'\n  const JQUERY_NO_CONFLICT = $.fn[NAME]\n\n  const Default = {\n    offset : 10,\n    method : 'auto',\n    target : ''\n  }\n\n  const DefaultType = {\n    offset : 'number',\n    method : 'string',\n    target : '(string|element)'\n  }\n\n  const Event = {\n    ACTIVATE      : `activate${EVENT_KEY}`,\n    SCROLL        : `scroll${EVENT_KEY}`,\n    LOAD_DATA_API : `load${EVENT_KEY}${DATA_API_KEY}`\n  }\n\n  const ClassName = {\n    DROPDOWN_ITEM : 'dropdown-item',\n    DROPDOWN_MENU : 'dropdown-menu',\n    NAV_LINK      : 'nav-link',\n    NAV           : 'nav',\n    ACTIVE        : 'active'\n  }\n\n  const Selector = {\n    DATA_SPY        : '[data-spy=\"scroll\"]',\n    ACTIVE          : '.active',\n    LIST_ITEM       : '.list-item',\n    LI              : 'li',\n    LI_DROPDOWN     : 'li.dropdown',\n    NAV_LINKS       : '.nav-link',\n    DROPDOWN        : '.dropdown',\n    DROPDOWN_ITEMS  : '.dropdown-item',\n    DROPDOWN_TOGGLE : '.dropdown-toggle'\n  }\n\n  const OffsetMethod = {\n    OFFSET   : 'offset',\n    POSITION : 'position'\n  }\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class ScrollSpy {\n\n    constructor(element, config) {\n      this._element       = element\n      this._scrollElement = element.tagName === 'BODY' ? window : element\n      this._config        = this._getConfig(config)\n      this._selector      = `${this._config.target} ${Selector.NAV_LINKS},`\n                          + `${this._config.target} ${Selector.DROPDOWN_ITEMS}`\n      this._offsets       = []\n      this._targets       = []\n      this._activeTarget  = null\n      this._scrollHeight  = 0\n\n      $(this._scrollElement).on(Event.SCROLL, $.proxy(this._process, this))\n\n      this.refresh()\n      this._process()\n    }\n\n\n    // getters\n\n    static get VERSION() {\n      return VERSION\n    }\n\n    static get Default() {\n      return Default\n    }\n\n\n    // public\n\n    refresh() {\n      let autoMethod = this._scrollElement !== this._scrollElement.window ?\n        OffsetMethod.POSITION : OffsetMethod.OFFSET\n\n      let offsetMethod = this._config.method === 'auto' ?\n        autoMethod : this._config.method\n\n      let offsetBase = offsetMethod === OffsetMethod.POSITION ?\n        this._getScrollTop() : 0\n\n      this._offsets = []\n      this._targets = []\n\n      this._scrollHeight = this._getScrollHeight()\n\n      let targets = $.makeArray($(this._selector))\n\n      targets\n        .map((element) => {\n          let target\n          let targetSelector = Util.getSelectorFromElement(element)\n\n          if (targetSelector) {\n            target = $(targetSelector)[0]\n          }\n\n          if (target && (target.offsetWidth || target.offsetHeight)) {\n            // todo (fat): remove sketch reliance on jQuery position/offset\n            return [\n              $(target)[offsetMethod]().top + offsetBase,\n              targetSelector\n            ]\n          }\n        })\n        .filter((item)  => item)\n        .sort((a, b)    => a[0] - b[0])\n        .forEach((item) => {\n          this._offsets.push(item[0])\n          this._targets.push(item[1])\n        })\n    }\n\n    dispose() {\n      $.removeData(this._element, DATA_KEY)\n      $(this._scrollElement).off(EVENT_KEY)\n\n      this._element       = null\n      this._scrollElement = null\n      this._config        = null\n      this._selector      = null\n      this._offsets       = null\n      this._targets       = null\n      this._activeTarget  = null\n      this._scrollHeight  = null\n    }\n\n\n    // private\n\n    _getConfig(config) {\n      config = $.extend({}, Default, config)\n\n      if (typeof config.target !== 'string') {\n        let id = $(config.target).attr('id')\n        if (!id) {\n          id = Util.getUID(NAME)\n          $(config.target).attr('id', id)\n        }\n        config.target = `#${id}`\n      }\n\n      Util.typeCheckConfig(NAME, config, DefaultType)\n\n      return config\n    }\n\n    _getScrollTop() {\n      return this._scrollElement === window ?\n          this._scrollElement.scrollY : this._scrollElement.scrollTop\n    }\n\n    _getScrollHeight() {\n      return this._scrollElement.scrollHeight || Math.max(\n        document.body.scrollHeight,\n        document.documentElement.scrollHeight\n      )\n    }\n\n    _process() {\n      let scrollTop    = this._getScrollTop() + this._config.offset\n      let scrollHeight = this._getScrollHeight()\n      let maxScroll    = this._config.offset\n        + scrollHeight\n        - this._scrollElement.offsetHeight\n\n      if (this._scrollHeight !== scrollHeight) {\n        this.refresh()\n      }\n\n      if (scrollTop >= maxScroll) {\n        let target = this._targets[this._targets.length - 1]\n\n        if (this._activeTarget !== target) {\n          this._activate(target)\n        }\n      }\n\n      if (this._activeTarget && scrollTop < this._offsets[0]) {\n        this._activeTarget = null\n        this._clear()\n        return\n      }\n\n      for (let i = this._offsets.length; i--;) {\n        let isActiveTarget = this._activeTarget !== this._targets[i]\n            && scrollTop >= this._offsets[i]\n            && (this._offsets[i + 1] === undefined ||\n                scrollTop < this._offsets[i + 1])\n\n        if (isActiveTarget) {\n          this._activate(this._targets[i])\n        }\n      }\n    }\n\n    _activate(target) {\n      this._activeTarget = target\n\n      this._clear()\n\n      let queries = this._selector.split(',')\n      queries     = queries.map((selector) => {\n        return `${selector}[data-target=\"${target}\"],` +\n               `${selector}[href=\"${target}\"]`\n      })\n\n      let $link = $(queries.join(','))\n\n      if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {\n        $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE)\n        $link.addClass(ClassName.ACTIVE)\n      } else {\n        // todo (fat) this is kinda sus…\n        // recursively add actives to tested nav-links\n        $link.parents(Selector.LI).find(Selector.NAV_LINKS).addClass(ClassName.ACTIVE)\n      }\n\n      $(this._scrollElement).trigger(Event.ACTIVATE, {\n        relatedTarget: target\n      })\n    }\n\n    _clear() {\n      $(this._selector).filter(Selector.ACTIVE).removeClass(ClassName.ACTIVE)\n    }\n\n\n    // static\n\n    static _jQueryInterface(config) {\n      return this.each(function () {\n        let data    = $(this).data(DATA_KEY)\n        let _config = typeof config === 'object' && config || null\n\n        if (!data) {\n          data = new ScrollSpy(this, _config)\n          $(this).data(DATA_KEY, data)\n        }\n\n        if (typeof config === 'string') {\n          if (data[config] === undefined) {\n            throw new Error(`No method named \"${config}\"`)\n          }\n          data[config]()\n        }\n      })\n    }\n\n\n  }\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * Data Api implementation\n   * ------------------------------------------------------------------------\n   */\n\n  $(window).on(Event.LOAD_DATA_API, () => {\n    let scrollSpys = $.makeArray($(Selector.DATA_SPY))\n\n    for (let i = scrollSpys.length; i--;) {\n      let $spy = $(scrollSpys[i])\n      ScrollSpy._jQueryInterface.call($spy, $spy.data())\n    }\n  })\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME]             = ScrollSpy._jQueryInterface\n  $.fn[NAME].Constructor = ScrollSpy\n  $.fn[NAME].noConflict  = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT\n    return ScrollSpy._jQueryInterface\n  }\n\n  return ScrollSpy\n\n})(jQuery)\n\nexport default ScrollSpy\n"]}